# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  dev:
    driver: bridge

services:
  api-FazendaSharpCity:
    image: docker.io/library/api:latest
    depends_on:
      - app-db
    container_name: api-FazendaSharpCity
  server:
    build:
      context: .
      target: final
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - "app-db"
      - "api-FazendaSharpCity"
    environment:
      - ConnectionStrings_FSCConnection=User ID=postgres;Password=dbadimn;Server=localhost;Port=5433;Database=FazendaSharpCity;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:8080
    networks:
      - dev
  app-db:
    image: postgres:latest
    container_name: app-db
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=FazendaSharpCity
      - POSTGRES_USER=postgres   
      - POSTGRES_PASSWORD=dbadmin
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

